set encoding=utf-8

if &compatible
    set nocompatible
endif

" ------------------------------------
" Test for rendering a white space
" ------------------------------------
" Half-width space at the end of a line 
" ã€€Full-width space

" ------------------------------------
" dpp.vim Plugin manager
" ------------------------------------
let s:rc_dir = expand('~/.vim/rc')
const s:dpp_base_dir = expand('~/.cache/dpp')

function! LoadOrGetPlugin(repo) abort
    let s:repo_dir = s:dpp_base_dir .. '/repos/github.com/' .. a:repo
    if &runtimepath !~# a:repo
        if !isdirectory(s:repo_dir)
            execute '!git clone https://github.com/' .. a:repo s:repo_dir
        endif
        execute 'set runtimepath^=' .. s:repo_dir
    endif
endfunction

call LoadOrGetPlugin('Shougo/dpp.vim')

if s:dpp_base_dir->dpp#min#load_state()
    const s:dpp_depend_repos = [
        \ 'vim-denops/denops.vim',
        \ 'Shougo/dpp-protocol-git',
        \ 'Shougo/dpp-ext-installer',
        \ 'Shougo/dpp-ext-lazy',
        \ 'Shougo/dpp-ext-toml'
        \ ]

    for repo in s:dpp_depend_repos
        call LoadOrGetPlugin(repo)
    endfor

    autocmd User DenopsReady
        \ : echohl WarningMsg
        \ | echomsg 'dpp load_state() is failed'
        \ | echohl NONE
        \ | call dpp#make_state(s:dpp_base_dir, s:rc_dir .. '/dpp.ts')
endif

autocmd User Dpp:makeStatePost
    \ : echohl WarningMsg
    \ | echomsg 'dpp make_state() is done'
    \ | echohl NONE

command! DppInstall call dpp#async_ext_action('installer', 'install')
command! DppUpdate call dpp#async_ext_action('installer', 'update')

filetype plugin indent on

" ------------------------------------
" neovimize.vim
" ------------------------------------
if !has('nvim')
    let s:neovimize_dir = expand('~/.cache/neovimize')
    if !isdirectory(s:neovimize_dir)
        execute '!git clone https://github.com/nakakitasota/neovimize.vim' s:neovimize_dir
    endif
    execute 'source' s:neovimize_dir . '/plugin/neovimize.vim'
endif

" ------------------------------------
" For specific file types
" ------------------------------------
" Enable wrapping in plain text
au FileType text setlocal wrap

" ------------------------------------
" Imports
" ------------------------------------
source ~/.vim/rc/options.rc.vim
source ~/.vim/rc/keymaps.rc.vim
source ~/.vim/rc/python.rc.vim
if has('nvim')
    source ~/.vim/rc/nvim-lsp.rc.lua
endif

" ------------------------------------
" Colors
" ------------------------------------
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
colorscheme nightfly
